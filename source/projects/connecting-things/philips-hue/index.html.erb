---
layout: projects/connecting-things/_thing_layout
title: Philips Hue
preview: thing/off.png
date: 2018-02-27
published: false
---

TODO: include the cloud in this play

<p>
  Philips Hue is a lighting ecosystem that includes lamps, a bridge, remotes, a web portal, and an app.
</p>
<p>
  The wireless bulbs can change color and brightness. The configuration we analyzed is the 3rd generation of Hue and launched in 2016.
</p>

<h2 class="subtitle">
  <span class="sentence">The connection process is</span> complex but secure
</h2>
<p>
  The connection process is explained but asks the user to understand the role of every player in the system.
</p>
<p>
  The user may start by installing the bulbs and switching on the power. The Bridge must be connected to a power and to the home network via an Ethernet cable. This can cause some confusion because the system is marketing as integrating with "Wi-Fi" but does not, in fact, utilize Wi-Fi directly.
</p>
<p>
  A new bridge will reach out to the Philips cloud and use a blue light to confirm connection. When launching the mobile app, it automatically searches the local network for Hue bridges. If one is found, the user must select it and push a link button on the bridge to verify the connection.
</p>
<p>
  TODO: describe cloud association
  After the Philips Hue connects, the user will have to accept terms and conditions. For iOS users, Homekit and Siri can also be configured. In the last step, all the lights bulbs can be added to the app and organized into rooms.
</p>

<!-- <h2 class="subtitle">
  <span class="sentence">The security is </span>weak
</h2>
<p>
The bridge and the device are both connected to the same network respectively with an ethernet cable and wireless. Most Wi-Fi networks are protected by a password to secure them. Hue app is lacking transparency because the user doesn't know who else is able to control the lights. In the past, some hackers infected Hue bulbs with malware targeting ZigBee from a drone. Hacking the Hue system remains a risk.
</p>

<h2 class="subtitle">
  <span class="sentence">The resilience is </span>good
</h2>
<p>
The app functions well if it is connected to the same local network as the bridge. Outside of the house, to control their lights, the user should use the portal on the web. Light bulbs use a wireless technology called ZigBee. The network created works perfectly for home automation in a small and personal area like a house.
</p> -->

<script>
var flowSteps = [
  {
    caption: "Phone is connected to home Wi-Fi, user plugs Hue bridge to home Wi-Fi, app listens for Bluetooth products",
    thingImg: "thing/off.png",
    networkAnimations: ["stills/OSWifi.json", "actors/noWifi.json", "ThingWifi_physical.json"],
    screenImg: "screens/01.png"
  },
  {
    caption: "Hue bridge emits blue light, Hue bridge and OS are in discovery mode, app shows indeterminate progress indicator",
    thingImg: "thing/blue.gif",
    networkAnimations: ["stills/OSWifi.json", "actors/noWifi.json", "stills/ThingWifi_physical.json", "ThingOS_discovery.json"],
  },
  {
    caption: "App discovers Hue bridge, Hue bridge and OS are pairing, app prompts user to initiate setup",
    thingImg: "thing/blue.png",
    networkAnimations: ["stills/OSWifi.json", "actors/noWifi.json", "stills/ThingWifi_physical.json", "ThingOS_pair.json"],
    screenImg: "screens/02.png"
  },
  {
    caption: "Hue bridge and OS are paired, app instructs user to push the link button on the hue bridge",
    networkAnimations: ["stills/OSWifi.json", "stills/ThingWifi_physical.json", "actors/noWifi.json", "ThingOS_verified.json"],
    screenImg: "screens/03.png"
  },
  {
    caption: "Hue bridge and app are connected, app prompts user for data access",
    networkAnimations: ["actors/noWifi.json", "stills/OSWifi.json", "stills/ThingWifi_physical.json", "stills/ThingOS_verified.json", "ThingApp_verified.json"],
    screenImg: "screens/04.png"
  },
  {
    caption: "App shows home screen",
    networkAnimations: ["actors/noWifi.json", "stills/OSWifi.json", "stills/ThingWifi_physical.json", "stills/ThingOS_verified.json", "stills/ThingApp_verified.json"],
    screenImg: "screens/05.png"
  }
]
</script>
