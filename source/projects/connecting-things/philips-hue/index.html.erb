---
layout: projects/connecting-things/_thing_layout
title: Philips Hue
preview: thing/off.png
date: 2018-02-27
published: true
---
<p>
Philips Hue is a light eco-system that include light bulbs and lamps, a bridge, a remote, a portal, and an app. The wireless light bulbs can change color, dim, flash, and pulse. LED technology makes them eco-friendly. They work with any standard light sockets.
</p>

<h2 class="subtitle">
  <span class="sentence">The connection process is </span>complex
</h2>
<p>
The connection process is complex not particularly because it’s explained poorly but because the user has to understand the role of every player in the system. The bridge is at the heart of the Hue system. It is controlling all the settings of the lights and it is also enabling the bulbs communication with each other and with the portal. The user may start by screwing the light bulbs and turn the power on. Then, the Bridge has to connect to a power outlet. After that, the ethernet cable should be plugged between the bridge and an ethernet port on the Wi-Fi router. A blue light turns on on the bridge. From there, if it hasn't been done yet, the user should download the Philips Hue app. When launching, the app automatically searches for Hue bridges. If the new Hue bridge is found, the user can tap the ‘set-up’ button that appears. The next screen indicates that the user should push the link button on the Hue bridge. After the Philips Hue connects, the user will have to accept terms and conditions. For iOS users, Homekit and Siri can also be configured. Then all the lights bulbs can be added and organized into rooms.
</p>

<h2 class="subtitle">
  <span class="sentence">The security is </span>okay
</h2>
<p>
The bridge and the device are both connected to the same network respectively with an ethernet cable and wireless. Most Wi-Fi networks are protected by a password to secure them.
</p>

<h2 class="subtitle">
  <span class="sentence">The resilience is </span>good
</h2>
<p>
The app functions well if it is connected to the same local network as the bridge. Outside of the house, to control their lights, the user should use the portal on the web. Light bulbs use a wireless technology called ZigBee. The network created works perfectly for home automation in a small and personal area like a house.
</p>

<script>
var flowSteps = [
  {
    caption: "User plugs Thing to home Wi-Fi - OS is connected to home Wi-Fi, Thing and home Wi-Fi connect - App shows indeterminate progress indicator",
    thingImg: "thing/off.png",
    networkAnimations: ["stills/OSWifi.json", "Actors_noWifi.json", "ThingWifi_physical.json"],
    screenImg: "screens/01.png"
  },
  {
    caption: "Thing lights turn on - Thing and OS are in discovery mode - App shows indeterminate progress indicator",
    thingImg: "thing/blue.gif",
    networkAnimations: ["stills/OSWifi.json", "Actors_noWifi.json", "stills/ThingWifi_physical.json", "OS_listens.json"],
    screenImg: "screens/01.png"
  },
  {
    caption: "Thing lights are on - Thing and OS pair - User selects Set up in App",
    thingImg: "thing/blue.png",
    networkAnimations: ["stills/OSWifi.json", "Actors_noWifi.json", "stills/ThingWifi_physical.json", "ThingOS_pair.json"],
    screenImg: "screens/02.png"
  },
  {
    caption: "Thing lights are on - Thing and OS connect - App shows instructions",
    thingImg: "thing/blue.png",
    networkAnimations: ["stills/OSWifi.json", "Actors_noWifi.json", "stills/ThingWifi_physical.json", "ThingOS_verified.json"],
    screenImg: "screens/03.png"
  },
  {
    caption: "Thing lights are on - Thing and App connect - User grants permission in App",
    thingImg: "thing/blue.png",
    networkAnimations: ["Actors_noWifi.json", "stills/OSWifi.json", "stills/ThingWifi_physical.json", "stills/ThingOS_verified.json", "ThingApp_verified.json"],
    screenImg: "screens/04.png"
  },
  {
    caption: "Thing lights are on - Thing and App are connected - App shows home screen",
    thingImg: "thing/blue.png",
    networkAnimations: ["Actors_noWifi.json", "stills/OSWifi.json", "stills/ThingWifi_physical.json", "stills/ThingOS_verified.json", "stills/ThingApp_verified.json"],
    screenImg: "screens/05.png"
  }
]
</script>
