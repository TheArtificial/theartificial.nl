---
layout: projects/connecting-things/_thing_layout
title: Polaroid Cube Plus
preview: thing/thing.png
date: 2018-02-27
---
<p>
Polaroid Cube+ is a connected splash-resistant and shockproof small cubic camera. It has a wide-angle lens of 124 degrees, and 1440p HD video. Its battery is going up to approximately 90 minutes and it uses a micro SD card for up to 128 GB of storage. It can be mounted on a stand or a helmet, or clipped thanks to a pendant case. It is designed to function with an app.
</p>

<h2 class="subtitle">
  <span class="sentence">The connection process is </span>easy
</h2>
<p>
First things first, the user should download the Polaroid Cube+ app. A guiding tour welcomes the user and informs him or her to first turn on the Cube+ by pressing the large button on top of the camera. This button will also be used to capture photos and videos. The LED turns green and the camera beeps 3 times to indicate that the camera is on. Then, the camera has to connect to the user’s device. To do so, the user is told to press the small circular Wi-Fi button on the camera until the button’s light begins to blink. Another screen auto-progresses in the app to instruct the user to open his Wi-Fi settings and to select the Cube+ network created under the Wi-Fi section. The app also provide the Cube+ network password. At this point the user navigates to the OS settings to connect to the ad hoc network created by the camera. He select the network, enters the passwords. Then he opens up the Polaroid cube app again and press the ‘connect’ button. Success. The camera is all set and the camera viewfinder is visible from the app.
</p>

<h2 class="subtitle">
  <span class="sentence">The security is </span>low
</h2>
<p>
Even if the ad hoc network powered by the camera uses a password that makes it a verified connection, ad hoc connections suffer from having less security against unwanted incoming connections than a Wi-Fi infrastructure connection. If a hacker get within the signal range of the camera, there will be little difficulty to connect to its as hoc.
</p>

<h2 class="subtitle">
  <span class="sentence">The resilience is </span>okay
</h2>
<p>
If the camera and the device stay close to each other, the connection function.
</p>

<script>
var flowSteps = [
  {
    caption: "App logs in to account on Cloud",
    thingImg: "thing/thing.png",
    networkAnimations: ["Actors.json", "AppCloud.json"],
    screenImg: "screens/login.png"
  }
]
</script>
