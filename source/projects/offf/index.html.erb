
<script type="text/javascript" src="/offf/library/d3.js"></script>
<link rel="stylesheet" type="text/css" href="/offf/stylesheets/project.scss">
<script src="/offf/library/jquery-2.2.0.min.js" type="text/javascript" > </script>


<div id="content" class="offf">

	<div class="bleed intro">
		<div class="flexcontainer">
			<div class="col-8 left-2 right-2 center introduction">
				<h1>What is OFFF conference about?</h1>
				<h5>an experiment by <a href="/people/ariane.html">Ariane Garoff</a></h5>
				<h2>Artists giving talks at <a href="http://www.offf.ws/" target="_blank" >OFFF conference</a> are represented in this interactive data-visualisation. Dynamic filters help users understanding the conference tendancies. New comers may want to find out if the lecturers are really matching their interests or expectations, whereas frequent visitors may compare several editions to see if the coming venue is as exciting as the previous. Organizer may use the website as a tool to analyze their spearkers flow when competitor may use it to position themselves on the market.</h2>
			</div>
		</div>
	</div>

	<div class="bleed blue">
		<div class="flexcontainer">
			<div class="col-12 center visualization">
				<script>
				  var
				    width = window.innerWidth,
				    height = window.innerHeight;

				  // SVG selection that holds the visualization
				  var svg = d3.select(".visualization").append("svg")
				    .attr("id", "container")
				    .attr("viewBox", "0 0 " + width + " " + height) //viewbox
				    .append("g")
				    .attr("preserveAspectRatio", "xMidYMid meet");

					// rectangle for background color
					svg.append("rect")
			    .attr("width", "100%")
			    .attr("height", "100%")
			    .attr("fill", "#081758");

				  // force layout, used to calculate positions
				  var force = d3.layout.force()
				    .linkDistance(50)
				    .linkStrength(0.25)
				    .charge(-125)
				    .size([width, height])
				    .on("tick", tick);

				  // this global will hold the loaded data
				  var graph;

				  // and these will hold the SVG elements
				  var nodeSelection = svg.selectAll('.node');
				      linkSelection = svg.selectAll('.link');

				  // lookup arrays for styling
				  var color = ["fff2bc","00a1a3", "97d9eb","#e66964","#f3aa84", "#f6c831"];
				  // var colorScale = d3.scale.linear().range(["fff2bc", "00a1a3", "97d9eb","#e66964","#f3aa84", "#f6c831"]).domain([0,1,2,3,4,5]);
					var colorindustry = ["#28b67a", "#7bc580", "#bfd857", "#53b59f", "#bedea8"];
					var colorcontinent = ["white", "#bf8ec0", "#fbc4aa", "#de4f76", "#f494be", "#edb9d0"];
					var colorstatus = ["#00b3c5", "#91d3ce", "#007bc1", "#00b7a3", "#a0cae7"];
					var coloryear = ["white","white","white", "#e66964", "#f3aa84", "#f6c831"];
					var radius = ["100","100","100","5","5","5"]; // the first three shouldn't happen
				  var transparency = ["0","0","0","0","0","0"];

				  // filter values
				  var includeGroupyears = [3,4,5];
				  var includeGroupstatus = [0,1,2,3,4];
				  var includeGroupcontinents = [1,2,3,4,5];
					var includeGroupindustries = [0,1,2,3,4];



				  // load and tick the layout, then draw all the things
				  function draw() {

				    // get them from the loaded graph
				    var allNodes = graph.nodes.slice(); // slice forces a copy
				        rawLinks = graph.links.slice();

				    // we have to find nodes ourself, because d3.force.links expects objects or indexes.
				    var allLinks = rawLinks.map(function(link) {
				      var source = allNodes.find(function(node) { return node.id === link.source; });
				      var target = allNodes.find(function(node) { return node.id === link.target; });
				      return {source: source, target: target, stroke: link.stroke}; });
				    // console.log("allLinks", allLinks);

				    // pre-start to force allLinks to reference nodes
				    // force
				    //   .nodes(allNodes)
				    //   .links(allLinks)
				    //   .start();

				    var filteredNodes = allNodes.filter(filterNode),
				        nodeIds = filteredNodes.map(function(node){ return node.id }),
				        filteredLinks = trimLinks(allLinks, nodeIds)
				        // nodeColor = filteredNodes.map(function(d){return color[d.groupyear], color[d.groupstatus]})
				        // console.log("nodeColor", nodeColor);
				        // console.log("Filtered links", allLinks, filteredLinks, graph);

				    // start the layout ticking
				    force
				      .nodes(filteredNodes)
				      .links(filteredLinks)
				      .start();

				    // bind the data array to the svg selection
				    linkSelection = linkSelection.data(filteredLinks);


				    // draw new links
				    linkSelection.enter().append("path")
				      .attr("class", "link") // you have to do this or you can't re-select it!
				      .style("opacity", "0.2")
				      .style("stroke-width", function(d,s) { return d.stroke; })
				      .style("stroke", "#FFFFFF")
				      .style("fill", "none");

				    // remove old links
				    linkSelection.exit().remove();

				    // bind the data array to the svg selection, with a key function
				    nodeSelection = nodeSelection.data(filteredNodes, function(d) { return d.id; });
				    nodeSelected = nodeSelection.data(filteredNodes);
				    // draw new nodes
				    var node = nodeSelection.enter()
				      .append("g")
				      .call(force.drag);

				    node.append("circle")
				      .attr("class", "node") // you have to do this or you can't re-select it!
							// .attr("fill", function(d, i) { return color[d.groupyear] })
				      // .attr("fill", function(d, i) { return d.groupyear ? color[d.groupyear] : "white"; }) // if no groupyear, then it's a category, so color white
				      .style("r", function(d, i) { return d.groupyear ? radius[d.groupyear] : 10; }); // if no groupyear, then it's a category, so size 7
							// .attr("fill", "white");

							// get the
							var colorid = dropdownr.node().options[dropdownr.node().selectedIndex].value;
							var colornumber = dropdownr.node().selectedIndex;
							console.log("this is my colorid", dropdownr.node().options[dropdownr.node().selectedIndex]);
							console.log("this is my colornumber", colornumber);

							if (colornumber == 1) {
								d3.selectAll("circle").attr("fill", function(d,i) { return colorindustry[d.groupindustry] } );
							}
							else if (colornumber == 2) {
								d3.selectAll("circle").attr("fill", function(d,i) { return colorcontinent[d.groupcontinent] } );
							}
							else if (colornumber == 3) {
								d3.selectAll("circle").attr("fill", function(d,i) { return colorstatus[d.groupstatus] } );
							}
							else if (colornumber == 4) {
								d3.selectAll("circle").attr("fill", function(d,i) { return coloryear[d.groupyear] } );
							}
							else {
								d3.selectAll("circle").attr("fill", "white") };



				    node.append("text")
				      .attr("dx", 8)
				      .attr("dy", 4)
				      .attr("spacing", 16)
				      .attr("id", "abc")
				      .attr("fill", function(d, i) {return d.groupyear ? color[d.groupyear] : "white";}) // if no groupyear, then it's a category, so color white
				      .attr("opacity", function(d, i) {return d.groupyear ? transparency[d.groupyear] : 1;}) // if no groupyear, then it's a category, so opacity 1
				      .attr("opacity", function(d, i) {return transparency[d.groupyear]})
							.attr("fill","white")
				      .text(function(d) {return d.name});

				    // remove old nodes
				    nodeSelection.exit().remove();
				    // console.log("nodeSelection", nodeSelection);
				  }

				  // called by force layout during iteration
				  function tick() {
				    linkSelection.attr("d", arcPath);
				    nodeSelection .attr("transform", function(d) {
				        return "translate("
				        + d.x + ","
				        + d.y + ")";
				    });
				  }

				  // draw SVG arc for link _d_, per http://bl.ocks.org/mbostock/1153292
				  function arcPath(d) {
				    var dx = d.target.x - d.source.x,
				        dy = d.target.y - d.source.y,
				        dr = Math.sqrt(dx * dx + dy * dy);
				    return "M" + d.source.x + "," + d.source.y + "A" + dr + "," + dr + " 0 0,1 " + d.target.x + "," + d.target.y;
				  }

				  //  function using includes to evaluate if some of node.groupcontinents exists in includeGroupcontinents
				  function isInGpc(element, index, array) {
				    return includeGroupcontinents.includes(element);
				  }

					//  function using includes to evaluate if some of node.groupindustry exists in includeGroupindustries
					function isInGpi(element, index, array) {
						return includeGroupindustries.includes(element);
					}

				  function filterNode(node) {
						var matchesGroupindustries = (typeof node.groupindustry == "undefined") || node.groupindustry.some(isInGpi);
				    var matchesGroupcontinents = (typeof node.groupcontinent == "undefined") || node.groupcontinent.some(isInGpc);
				    var matchesGroupyear = (typeof node.groupyear == "undefined") || includeGroupyears.includes(node.groupyear);
				    var matchesGroupstatus = (typeof node.groupstatus == "undefined") || includeGroupstatus.includes(node.groupstatus);
				    // console.log('includeGroupcontinents', includeGroupcontinents);
				    // console.log('node.groupcontinent', node.groupcontinent);
				    // console.log('matchesGroupcontinents', matchesGroupcontinents);
				    return (matchesGroupindustries && matchesGroupcontinents && matchesGroupyear && matchesGroupstatus);
				  }

				  function trimLinks(links, nodeIds) {
				    results = [];
				    var results = links.filter(function(link) {
				      return (nodeIds.includes(link.source.id) && nodeIds.includes(link.target.id));
				    });
				    return results;
				  }

				  // fetch data and (in the callback) load into the arrays
				  d3.json("/offf/data/industry.json", function(error, json) {
				    graph = json;
				    // console.log('Fetched', graph);
				    draw();
				  });


					// // Togle the label button between show and hide
				  // d3.select("#label0").on("click", function(d,i) {
				  //   // Determine if current label is visible
				  //    var active   = abc.active ? false : true,
				  //      newOpacity = active ? 1 : 0;
				  //    // Hide or show the labels
				  //    d3.selectAll("text").attr("opacity", newOpacity);
				  //    d3.selectAll("text").select("id", "abc").attr("opacity", newOpacity);
				  //    // Update whether or not the elements are active
				  //    abc.active = active;
				  //  });





				 </script>
			</div>
		</div>
	</div>


<div class="bleed blue">
	<div class="flexcontainer">
		<div class="choicescontainer">

			<div class="col-2 left-1 choicel">
				<li>Organise artists by</li>
				<div id= "industryl" class="legendl" style="display:none">
					<ul>
						<li id="industryl1"> <img src="/offf/images/dot-category.svg"> <a>print</a></li>
						<li id="industryl2"> <img src="/offf/images/dot-category.svg"> <a>motion</a></li>
						<li id="industryl3"> <img src="/offf/images/dot-category.svg"> <a>digital</a></li>
						<li id="industryl4"> <img src="/offf/images/dot-category.svg"> <a>sound design</a></li>
						<li id="industryl5"> <img src="/offf/images/dot-category.svg"> <a>product design</a></li>
						<li id="industryl6"> <img src="/offf/images/dot-category.svg"> <a>all industries</a></li>
					</ul>
				</div>
				<div id="locationl" class="legendl" style="display:none">
					<ul>
						<li id="locationl1"> <img src="/offf/images/dot-category.svg"> <a>Asia</a></li>
						<li id="locationl2"> <img src="/offf/images/dot-category.svg"> <a>Australia</a></li>
						<li id="locationl3"> <img src="/offf/images/dot-category.svg"> <a>Europe</a></li>
						<li id="locationl4"> <img src="/offf/images/dot-category.svg"> <a>North America</a></li>
						<li id="locationl5"> <img src="/offf/images/dot-category.svg"> <a>South America</a></li>
						<li id="locationl6"> <img src="/offf/images/dot-category.svg"> <a>all continents</a></li>
					</ul>
				</div>
				<div id="statusl" class="legendl" style="display:none">
					<ul>
						<li id="statusl1"> <img src="/offf/images/dot-category.svg"> <a>independant</a></li>
						<li id="statusl2"> <img src="/offf/images/dot-category.svg"> <a>represented</a></li>
						<li id="statusl3"> <img src="/offf/images/dot-category.svg"> <a>agency</a></li>
						<li id="statusl4"> <img src="/offf/images/dot-category.svg"> <a>eponym agency</a></li>
						<li id="statusl5"> <img src="/offf/images/dot-category.svg"> <a>collective</a></li>
						<li id="statusl6"> <img src="/offf/images/dot-category.svg"> <a>all status</a></li>

					</ul>
				</div>
				<div id="yearl" class="legendl" style="display:none">
					<ul>
						<li id="yearl2"> <img src="/offf/images/dot-category.svg"> <a>2015</a></li>
						<li id="yearl2"> <img src="/offf/images/dot-category.svg"> <a>2016</a></li>
						<li id="yearl3"> <img src="/offf/images/dot-category.svg"> <a>2015 and 2016</a></li>
						<li id="yearl4"> <img src="/offf/images/dot-category.svg"> <a>all year</a></li>
					</ul>
				</div>

			</div>
			<div class="col-2 left-3 selectl">
				<script type="text/javascript"> </script>
					<select id="pickl" name="pickl">
						<option value ="" selected value= "selected" disabled="disabled">choose filter</option>
							<option value="/offf/data/industry.json" data-legendcat="#industryl"> industry</option>
							<option value="/offf/data/location.json" data-legendcat="#locationl"> location</option>
							<option value="/offf/data/status.json" data-legendcat="#statusl"> status</option>
							<option value="/offf/data/year.json" data-legendcat="#yearl"> year(s) of talk</option>
					</select>​
			</div>

			<div class="col-2 left-7 choicer">
				<li>Colour artists by</li>
				<div id= "industryr" class="legendr" style="display:none">
					<ul>
						<li id="industryr1"> <img src="/offf/images/legend-pink.svg"> <a> print</li> </a>
						<li id="industryr2"> <img src="/offf/images/legend-peach.svg"> <a>motion</a></li>
						<li id="industryr3"> <img src="/offf/images/legend-yellow.svg"> <a>digital</a></li>
						<li id="industryr4"> <img src="/offf/images/legend-aqua.svg"> <a>sound design</a></li>
						<li id="industryr5"> <img src="/offf/images/legend-blue.svg"> <a>product design</a></li>
						<li id="industryr6"> <img src="/offf/images/legend-pink.svg"> <img src="/offf/images/legend-peach.svg"> <img src="/offf/images/legend-yellow.svg"> <img src="/offf/images/legend-blue.svg"> <img src="/offf/images/legend-aqua.svg"><a> Any</a></li>
					</ul>
				</div>
				<div id="locationr" class="legendr" style="display:none">
					<ul>
						<li id="locationr1"> <img src="/offf/images/legend-soya.svg"> <a>Asia</a></li>
						<li id="locationr2"> <img src="/offf/images/legend-aqua.svg"> <a>Australia</a></li>
						<li id="locationr3"> <img src="/offf/images/legend-pink.svg"> <a>Europe</a></li>
						<li id="locationr4"> <img src="/offf/images/legend-peach.svg"> <a>North America</a></li>
						<li id="locationr5"> <img src="/offf/images/legend-yellow.svg"> <a>South America</a></li>
						<li id="locationr6"> <img src="/offf/images/legend-soya.svg"> <img src="/offf/images/legend-peach.svg"> <img src="/offf/images/legend-yellow.svg"> <img src="/offf/images/legend-blue.svg"> <img src="/offf/images/legend-aqua.svg"><a> Any</a></li>
					</ul>
				</div>
				<div id="statusr" class="legendr" style="display:none">
					<ul>
						<li id="statusr1"> <img src="/offf/images/legend-pink.svg"> <a>independant</a></li>
						<li id="statusr2"> <img src="/offf/images/legend-peach.svg"> <a>represented</a></li>
						<li id="statusr3"> <img src="/offf/images/legend-yellow.svg"> <a>agency</a></li>
						<li id="statusr4"> <img src="/offf/images/legend-aqua.svg"> <a>eponym agency</a></li>
						<li id="statusr5"> <img src="/offf/images/legend-blue.svg"> <a>collective</a></li>
						<li id="statusr6"> <img src="/offf/images/legend-pink.svg"> <img src="/offf/images/legend-peach.svg"> <img src="/offf/images/legend-yellow.svg"> <img src="/offf/images/legend-blue.svg"> <img src="/offf/images/legend-aqua.svg"><a> Any</a></li>
					</ul>
				</div>
				<div id="yearr" class="legendr" style="display:none">
					<ul>
						<li id="yearr1"> <img src="/offf/images/legend-pink.svg"> <a>2015</a></li>
						<li id="yearr2"> <img src="/offf/images/legend-peach.svg"> <a>2016</a></li>
						<li id="yearr3"> <img src="/offf/images/legend-yellow.svg"> <a>2015 and 2016</a></li>
						<li id="yearr4"> <img src="/offf/images/legend-pink.svg"> <img src="/offf/images/legend-peach.svg"> <img src="/offf/images/legend-yellow.svg"> <a> Any</a></li>
					</ul>
				</div>
			</div>
			<div class="col-2 left-9 selectr">
				<script type="text/javascript"> </script>
					<select id="pickr">
						<option value ="" selected value= "selected" disabled="disabled">choose filter</option>
						<option value ="" data-legendcol="#industryr">industry</option>
						<option value="" data-legendcol="#locationr">location</option>
						<option value="" data-legendcol="#statusr">working status</option>
						<option value="" data-legendcol="#yearr"> year(s) of talk</option>
					</select>
			</div>

			</div>
		</div>
	</div>

	<script>



		var dropdownl = d3.select("#pickl")
		var changesrc = function() {
			var source = dropdownl.node().options[dropdownl.node().selectedIndex].value;
			var legendcat = dropdownl.node().options[dropdownl.node().selectedIndex].dataset.legendcat;

			$(".legendl").hide();
			$(legendcat).show();

			d3.json(source, function(error, json) {
				graph = json; draw();
				// console.log("this is my option", dropdownl.node().options[dropdownl.node().selectedIndex]);
				// console.log("this is my first option", dropdownl.node().options[dropdownl.node().selectedIndex].value);
				// console.log("this is my second option only", dropdownl.node().options[dropdownl.node().selectedIndex].dataset.legendcat);
			})
		}

		var dropdownr = d3.select("#pickr")
		var changecolor = function() {

			var legendcol = dropdownr.node().options[dropdownr.node().selectedIndex].dataset.legendcol;
			$(".legendr").hide();
			$(legendcol).show();


			// var colorid = dropdownr.node().options[dropdownr.node().selectedIndex].value;
			// var colornumber = dropdownr.node().selectedIndex;

			$(".legendr").removeClass("nbr");
			$(legendcol).addClass("nbr");

			var licolornumber = $(".nbr li").length;
			var liid = $('.nbr li').map(function(i,n) {
    		return $(n).attr('id');
				}).get().join(',');

			var liindex = $('.nbr li').map(function(i,n){
				return $(this).index();
				}).get().join(',');



			// var color = ["red","#fff2bc", "#00a1a3", "#97d9eb","#e66964","#f3aa84", "#f6c831"];
			// // var colorScale = d3.scale.ordinal().range(["#fff2bc", "#00a1a3", "#97d9eb","#e66964","#f3aa84", "#f6c831"]).domain(["#industryr", "#locationr", "#yearr", "#statusr" ]);
			// // var colorScale = d3.scale.ordinal().range(["red","#fff2bc", "#00a1a3", "#97d9eb","#e66964","#f3aa84", "#f6c831"]).domain([0, 1, 2, 3, 4, 5, 6]);
			// d3.selectAll("circle").attr("fill", function(d,i) { return color[licolornumber] } );

			draw();



			// console.log("this is my colorid", dropdownr.node().options[dropdownr.node().selectedIndex]);
			// console.log("this is my colornumber", colornumber);
			console.log("this is my legendcol", legendcol);
			console.log("this is my licolornumber", licolornumber);
			console.log("this is my liid", liid);
			console.log("this is my liindex", liindex);
		};

			$(function() {
				$('#pickr').change(function() {
					dropdownr.on("changecolor", changecolor)
					changecolor();
					});
			});

			$(function() {
				$('#pickl').change(function() {
					dropdownl.on("changesrc", changesrc)
					changesrc();
					});
			});

			// wire up the filters the hard way
			d3.select("#industryr1").on("click", function() { includeGroupindustries = [0]; draw(); });
			d3.select("#industryr2").on("click", function() { includeGroupindustries = [1]; draw(); });
			d3.select("#industryr3").on("click", function() { includeGroupindustries = [2]; draw(); });
			d3.select("#industryr4").on("click", function() { includeGroupindustries = [3]; draw(); });
			d3.select("#industryr5").on("click", function() { includeGroupindustries = [4]; draw(); });
			d3.select("#industryr6").on("click", function() { includeGroupindustries = [0,1,3,4]; draw(); });
			d3.select("#yearr1").on("click", function(d,i) { includeGroupyears = [1,3]; draw(); });
			d3.select("#yearr2").on("click", function() { includeGroupyears = [1,4]; draw(); });
			d3.select("#yearr3").on("click", function() { includeGroupyears = [1,5]; draw(); });
			d3.select("#yearr4").on("click", function() { includeGroupyears = [1,3,4,5]; draw(); });
			d3.select("#locationr1").on("click", function() { includeGroupcontinents = [1,3]; draw(); });
			d3.select("#locationr2").on("click", function() { includeGroupcontinents = [1,2]; draw(); });
			d3.select("#locationr3").on("click", function() { includeGroupcontinents = [1,3]; draw(); });
			d3.select("#locationr4").on("click", function() { includeGroupcontinents = [1,4]; draw(); });
			d3.select("#locationr5").on("click", function() { includeGroupcontinents = [1,5]; draw(); });
			d3.select("#locationr6").on("click", function() { includeGroupcontinents = [1,2,3,4,5]; draw(); });
			d3.select("#statusr1").on("click", function() { includeGroupstatus = [1,1]; draw(); });
			d3.select("#statusr2").on("click", function() { includeGroupstatus = [1,2]; draw(); });
			d3.select("#statusr3").on("click", function() { includeGroupstatus = [1,3]; draw(); });
			d3.select("#statusr4").on("click", function() { includeGroupstatus = [1,4]; draw(); });
			d3.select("#statusr5").on("click", function() { includeGroupstatus = [1,5]; draw(); });
			d3.select("#statusr6").on("click", function() { includeGroupstatus = [1,2,3,4,5]; draw(); });
	</script>

	<div class="bleed intro">
		<div class="flexcontainer">
			<div class="col-8 left-2 right-2 center introduction">
				<img src="/offf/images/offf-logo-darkest-saphire.svg" alt="offf-logo" style="width:150px" src="http://www.offf.ws/" target="_blank">
				<h2>OFFF is a three-day festival annually hosting innovative, creative and nternational speakers in Barcelona.</h2>
			</div>
		</div>
	</div>

</div>
