
<div id="content" class="offf">

	<div class="bleed intro">
		<div class="flex container">
			<div class="col-10 left-1 right-1 center introduction">
				<h1>What is OFFF conference about?</h1>
				<h5>an experiment by <a href="/people/ariane.html">Ariane Garoff</a></h5>
				<h2>Artists giving talks at <a href="http://www.offf.ws/" target="_blank">OFFF conference</a> are represented by dots in this interactive data-visualisation. Dynamic filters help users understanding the conference tendancies. New comers may want to find out if the lecturers are really matching their interests whereas frequent visitors may compare several editions to see if the coming venue is as exciting as the previous.</h2>
			</div>
		</div>
	</div>

	<div class="bleed blue">
		<div class="flex container">
			<div class="col-12 center visualization">
				<script>
				  var
				    width = window.innerWidth*0.9,
				    height = window.innerHeight*0.9;

				  // SVG selection that holds the visualization
				  var svg = d3.select(".visualization").append("svg")
				    .attr("id", "container")
				    .attr("viewBox", "0 0 " + width + " " + height) //viewbox
				    .append("g")
				    .attr("preserveAspectRatio", "xMidYMid meet");

				  // force layout, used to calculate positions
				  var force = d3.layout.force()
				    .linkDistance(50)
				    .linkStrength(0.25)
				    .charge(-125)
				    .size([width, height])
				    .on("tick", tick);

				  // this global will hold the loaded data
				  var graph;

				  // and these will hold the SVG elements
				  var nodeSelection = svg.selectAll('.node');
				      linkSelection = svg.selectAll('.link');

				  // lookup arrays for styling
				  var color = ["white", "fff2bc","00a1a3", "97d9eb","#e66964","#f3aa84", "#f6c831"];
					var colorindustry = ["#28b67a", "#7bc580", "#bfd857", "#53b59f", "#bedea8", "white"];
					var colorcontinent = ["white", "#bf8ec0", "#fbc4aa", "#de4f76", "#f494be", "#edb9d0", "white"];
					var colorstatus = ["#00b3c5", "#91d3ce", "#007bc1", "#00b7a3", "#a0cae7", "white"];
					var coloryear = ["white","white","white", "#e66964", "#f3aa84", "#f6c831"];
					var radius = ["100","100","100","5","5","5"]; // the first three shouldn't happen

				  // filter values
					// special case: [] matches nodes with multiple values
				  var includeGroupyears = [3,4,5];
				  var includeGroupstatus = [0,1,2,3,4];
				  var includeGroupcontinents = [1,2,3,4,5];
					var includeGroupindustries = [0,1,2,3,4];

				  // load and tick the layout, then draw all the things
				  function draw() {

				    // get them from the loaded graph
				    var allNodes = graph.nodes.slice(); // slice forces a copy
				        rawLinks = graph.links.slice();
				    // we have to find nodes ourself, because d3.force.links expects objects or indexes.
				    var allLinks = rawLinks.map(function(link) {
				      var source = allNodes.find(function(node) { return node.id === link.source; });
				      var target = allNodes.find(function(node) { return node.id === link.target; });
				      return {source: source, target: target, stroke: link.stroke}; });
				    // console.log("allLinks", allLinks);
						// console.log("rawLinks", rawLinks);
						// console.log("linkSelection", linkSelection);

				    var filteredNodes = allNodes.filter(filterNode),
				        nodeIds = filteredNodes.map(function(node){ return node.id }),
				        filteredLinks = trimLinks(allLinks, nodeIds)
				        // console.log("Filtered links", allLinks, filteredLinks, graph);

				    // start the layout ticking
				    force
				      .nodes(filteredNodes)
				      .links(filteredLinks)
				      .start();

				    // bind the data array to the svg selection
				    linkSelection = linkSelection.data(filteredLinks);

						linkSelection.enter().append("path");

						var linkupdate = d3.selectAll("path")

						function update() {
						  // Update selection: Resize and position existing
						  // DOM elements with data bound to them.
						    linkupdate.attr("class", "link") // you have to do this or you can't re-select it!
								    .style("opacity", "0.2")
								    .style("stroke-width", function(d,s) { return d.stroke; })
								    .style("stroke", "#FFF")
								    .style("fill", "none");
						};
						update();

				    linkSelection.exit().remove();

				    // bind the data array to the svg selection, with a key function
				    nodeSelection = nodeSelection.data(filteredNodes, function(d) { return d.id; });
				    nodeSelected = nodeSelection.data(filteredNodes);
				    // draw new nodes
				    var node = nodeSelection.enter()
				      .append("g")
							.attr("class","node")
				      .call(force.drag);

				    node.append("circle")
				      .attr("class", "dot") // you have to do this or you can't re-select it!
				      .attr("r", function(d, i) { return d.groupyear ? radius[d.groupyear] : 10; }); // if no groupyear, then it's a category, so size 7

				    node.append("text")
				      .attr("dx", 15)
				      .attr("dy",5)
				      .attr("spacing", 15)
				      .text(function(d) {return d.name});

						node.append("text")
								.attr("class","textcategory")
					      .attr("dx", 15)
					      .attr("dy",5)
					      .attr("spacing", 15)
					      .text(function(d) {return d.category});

				    // remove old nodes
				    nodeSelection.exit().remove();
						// console.log("nodeSelected", nodeSelected);

					//  function using includes to evaluate if some of node.groupcontinents exists in includeGroupcontinents
				  function isInGpc(element, index, array) {
				    return includeGroupcontinents.includes(element);
				  }

					//  function using includes to evaluate if some of node.groupindustry exists in includeGroupindustries
					function isInGpi(element, index, array) {
						return includeGroupindustries.includes(element);
					}


					// filters the dots
				  function filterNode(node) {
						var dropdownr = d3.select("#pickr")
						var colornumber = dropdownr.node().selectedIndex;

						if (colornumber == 1) {
							var matchesGroupindustries = (typeof node.groupindustry == "undefined") || (includeGroupindustries.length === 0 ? node.groupindustry.length > 1 : node.groupindustry.some(isInGpi));
							return matchesGroupindustries;
						}
						else if (colornumber == 2) {
							var matchesGroupcontinents = (typeof node.groupcontinent == "undefined") || (includeGroupcontinents.length === 0 ? node.groupcontinent.length > 1 : node.groupcontinent.some(isInGpc));
							return matchesGroupcontinents;
						}
						else if (colornumber == 3) {
							var matchesGroupstatus = (typeof node.groupstatus == "undefined") || includeGroupstatus.includes(node.groupstatus);
							return matchesGroupstatus;
						}
						else if(colornumber == 4) {
							var matchesGroupyear = (typeof node.groupyear == "undefined") || includeGroupyears.includes(node.groupyear);
							return matchesGroupyear;
						}
						else {
							var matchesGroupyear = (typeof node.groupyear == "undefined") || includeGroupyears.includes(node.groupyear);
							var matchesGroupindustries = (typeof node.groupindustry == "undefined") || (includeGroupindustries.length === 0 ? node.groupindustry.length > 1 : node.groupindustry.some(isInGpi));
							var matchesGroupcontinents = (typeof node.groupcontinent == "undefined") || (includeGroupcontinents.length === 0 ? node.groupcontinent.length > 1 : node.groupcontinent.some(isInGpc));
							var matchesGroupstatus = (typeof node.groupstatus == "undefined") || includeGroupstatus.includes(node.groupstatus);
							return (matchesGroupyear && matchesGroupindustries && matchesGroupcontinents && matchesGroupstatus)
						}
						// console.log('includeGroupstatus', includeGroupstatus);
				    // console.log('includeGroupcontinents', includeGroupcontinents);
				    // console.log('node.groupcontinent', node.groupcontinent);
				    // console.log('matchesGroupcontinents', matchesGroupcontinents);
				  }

					// get the id name and number of the selected link to color accordingly the selected dots
					var dropdownr = d3.select("#pickr")
					var colorid = dropdownr.node().options[dropdownr.node().selectedIndex].value;
					var colornumber = dropdownr.node().selectedIndex;
					// console.log("this is my colorid", dropdownr.node().options[dropdownr.node().selectedIndex]);
					// console.log("this is my colornumber", colornumber);

					// the colouring code throws error because it is looking for .groupsomething data in the category nodes?
					if (colornumber == 1) {
						d3.selectAll("circle").style("fill", function(d,i) { return typeof d == "undefined" ? "white" : colorindustry[d.groupindustry] });
					}
					else if (colornumber == 2) {
						d3.selectAll("circle").style("fill", function(d,i) { return typeof d == "undefined" ? "white" : colorcontinent[d.groupcontinent] });
					}
					else if (colornumber == 3) {
						d3.selectAll("circle").style("fill", function(d,i) { return typeof d == "undefined" ? "white" : colorstatus[d.groupstatus] });
					}
					else if (colornumber == 4) {
						d3.selectAll("circle").style("fill", function(d,i) { return typeof d == "undefined" ? "white" : coloryear[d.groupyear] });
					}
					else {
						d3.selectAll("circle").style("fill", "white") };
					}

				  // called by force layout during iteration
				  function tick() {
				    linkSelection.attr("d", arcPath);
				    nodeSelection.attr("transform", function(d) {
				        return "translate("
				        + d.x + ","
				        + d.y + ")";
				    });
				  }

				  // draw SVG arc for link _d_, per http://bl.ocks.org/mbostock/1153292
				  function arcPath(d) {
				    var dx = d.target.x - d.source.x,
				        dy = d.target.y - d.source.y,
				        dr = Math.sqrt(dx * dx + dy * dy);
				    return "M" + d.source.x + "," + d.source.y + "A" + dr + "," + dr + " 0 0,1 " + d.target.x + "," + d.target.y;
				  }

				  function trimLinks(links, nodeIds) {
				    results = [];
				    var results = links.filter(function(link) {
				      return (nodeIds.includes(link.source.id) && nodeIds.includes(link.target.id));
				    });
				    return results;
				  }

				  // fetch data and (in the callback) load into the arrays
				  d3.json("/offf/data/industry.json", function(error, json) {
				    graph = json;
				    // console.log('Fetched', graph);
				    draw();
				  });
				</script>
			</div>
		</div>
	</div>

	<div class="bleed blue">
			<div class="col-12 flex container choices">
				<div class="col-4 left-1 choicel">
					<li>
						Organise artists by
						<select id="pickl" name="pickl">
							<option value="selectfilter" disabled="disabled">select filter</option>
							<option value="/offf/data/industry.json" selected value="selected" data-legendcat="#industryl"> industry</option>
							<option value="/offf/data/location.json" data-legendcat="#locationl"> location</option>
							<option value="/offf/data/status.json" data-legendcat="#statusl"> working status</option>
							<option value="/offf/data/year.json" data-legendcat="#yearl"> year(s) of talk</option>
						</select>​
					</li>
					<div id= "industryl" class="legendl" style="display:none">
						<ul>
							<li id="industrylPrint"> <img src="/offf/images/dot-category.svg"> <a>print</a></li>
							<li id="industrylMotion"> <img src="/offf/images/dot-category.svg"> <a>motion</a></li>
							<li id="industrylDigital"> <img src="/offf/images/dot-category.svg"> <a>digital</a></li>
							<li id="industrylSound"> <img src="/offf/images/dot-category.svg"> <a>sound design</a></li>
							<li id="industrylProduct"> <img src="/offf/images/dot-category.svg"> <a>product design</a></li>
							<li id="industrylAll"> <img src="/offf/images/dot-category.svg"> <a>all industries</a></li>
						</ul>
					</div>
					<div id="locationl" class="legendl" style="display:none">
						<ul>
							<li id="locationlAsia"> <img src="/offf/images/dot-category.svg"> <a>Asia</a></li>
							<li id="locationlAustralia"> <img src="/offf/images/dot-category.svg"> <a>Australia</a></li>
							<li id="locationlEurope"> <img src="/offf/images/dot-category.svg"> <a>Europe</a></li>
							<li id="locationlNAmerica"> <img src="/offf/images/dot-category.svg"> <a>North America</a></li>
							<li id="locationlSAmerica"> <img src="/offf/images/dot-category.svg"> <a>South America</a></li>
							<li id="locationlAll"> <img src="/offf/images/dot-category.svg"> <a>all continents</a></li>
						</ul>
					</div>
					<div id="statusl" class="legendl" style="display:none">
						<ul>
							<li id="statuslIndependant"> <img src="/offf/images/dot-category.svg"> <a>independant</a></li>
							<li id="statuslRepresented"> <img src="/offf/images/dot-category.svg"> <a>represented</a></li>
							<li id="statuslAgency"> <img src="/offf/images/dot-category.svg"> <a>agency</a></li>
							<li id="statuslEponym"> <img src="/offf/images/dot-category.svg"> <a>eponym agency</a></li>
							<li id="statuslCollective"> <img src="/offf/images/dot-category.svg"> <a>collective</a></li>
							<li id="statuslAll"> <img src="/offf/images/dot-category.svg"> <a>all status</a></li>
						</ul>
					</div>
					<div id="yearl" class="legendl" style="display:none">
						<ul>
							<li id="yearl15"> <img src="/offf/images/dot-category.svg"> <a>2015</a></li>
							<li id="yearl16"> <img src="/offf/images/dot-category.svg"> <a>2016</a></li>
							<li id="yearl1516"> <img src="/offf/images/dot-category.svg"> <a>2015 and 2016</a></li>
							<li id="yearlAll"> <img src="/offf/images/dot-category.svg"> <a>all year</a></li>
						</ul>
					</div>
				</div>
				<div class="col-4 left-7 choicer">
					<li>
						Change artists colours by
						<script type="text/javascript"> </script>
							<select id="pickr">
								<option value="allwhite" selected value="selected" disabled="disabled">select filter</option>
								<option value="allIndustries" data-legendcol="#industryr">industry</option>
								<option value="allLocations" data-legendcol="#locationr">location</option>
								<option value="allStatus" data-legendcol="#statusr">working status</option>
								<option value="allYears" data-legendcol="#yearr"> year(s) of talk</option>
							</select>
					</li>
					<div id= "industryr" class="legendr" style="display:none">
						<ul>
							<li id="industryrMulti"> <img src="/offf/images/legend-multi.svg"> <a>multi disciplinary</a></li>
							<li id="industryrPrint"> <img src="/offf/images/legend-indu-print.svg"><img src="/offf/images/legend-multi.svg"> <a>print</li> </a>
							<li id="industryrMotion"> <img src="/offf/images/legend-indu-motion.svg"><img src="/offf/images/legend-multi.svg"> <a>motion</a></li>
							<li id="industryrDigital"> <img src="/offf/images/legend-indu-digital.svg"><img src="/offf/images/legend-multi.svg"> <a>digital</a></li>
							<li id="industryrSound"> <img src="/offf/images/legend-indu-sound.svg"><img src="/offf/images/legend-multi.svg"> <a>sound design</a></li>
							<li id="industryrProduct"> <img src="/offf/images/legend-indu-product.svg"><img src="/offf/images/legend-multi.svg"> <a>product design</a></li>
							<li id="industryrAll"> <img src="/offf/images/legend-indu-print.svg"><img src="/offf/images/legend-indu-motion.svg"><img src="/offf/images/legend-indu-digital.svg"><img src="/offf/images/legend-indu-sound.svg"><img src="/offf/images/legend-indu-product.svg"><img src="/offf/images/legend-multi.svg"> <a>all industries</a></li>
						</ul>
					</div>
					<div id="locationr" class="legendr" style="display:none">
						<ul>
							<li id="locationrMulti"> <img src="/offf/images/legend-multi.svg"> <a>multi location</a></li>
							<li id="locationrEurope"> <img src="/offf/images/legend-loc-europe.svg"><img src="/offf/images/legend-multi.svg"> <a>Europe</a></li>
							<li id="locationrNamerica"> <img src="/offf/images/legend-loc-northamerica.svg"><img src="/offf/images/legend-multi.svg"> <a>North America</a></li>
							<li id="locationrAsia"> <img src="/offf/images/legend-loc-asia.svg"><img src="/offf/images/legend-multi.svg"> <a>Asia</a></li>
							<li id="locationrSAmerica"> <img src="/offf/images/legend-loc-southamerica.svg"><img src="/offf/images/legend-multi.svg"> <a>South America</a></li>
							<li id="locationrAustralia"> <img src="/offf/images/legend-loc-australia.svg"><img src="/offf/images/legend-multi.svg"> <a>Australia</a></li>
							<li id="locationrAll"> <img src="/offf/images/legend-loc-europe.svg"><img src="/offf/images/legend-loc-northamerica.svg"><img src="/offf/images/legend-loc-asia.svg"><img src="/offf/images/legend-loc-southamerica.svg"><img src="/offf/images/legend-loc-australia.svg"><img src="/offf/images/legend-multi.svg"> <a>all locations</a></li>
						</ul>
					</div>
					<div id="statusr" class="legendr" style="display:none">
						<ul>
							<li id="statusrAgency"><img src="/offf/images/legend-status-agency.svg"> <a>agency</a></li>
							<li id="statusrIndependant"><img src="/offf/images/legend-multi.svg"> <a>independant</a></li>
							<li id="statusrEponym"><img src="/offf/images/legend-status-eponym.svg"> <a>eponym agency</a></li>
							<li id="statusrRepresented"><img src="/offf/images/legend-status-represented.svg"> <a>represented</a></li>
							<li id="statusrCollective"><img src="/offf/images/legend-status-collective.svg"> <a>collective</a></li>
							<li id="statusrAll"><img src="/offf/images/legend-status-agency.svg"><img src="/offf/images/legend-status-independant.svg"><img src="/offf/images/legend-status-eponym.svg"><img src="/offf/images/legend-status-represented.svg"><img src="/offf/images/legend-status-collective.svg"> <a>all status</a></li>
						</ul>
					</div>
					<div id="yearr" class="legendr" style="display:none">
						<ul>
							<li id="yearr15"><img src="/offf/images/legend-year-15.svg"> <a>2015</a></li>
							<li id="yearr16"><img src="/offf/images/legend-year-16.svg"> <a>2016</a></li>
							<li id="yearr1516"><img src="/offf/images/legend-year-both.svg"> <a>2015 and 2016</a></li>
							<li id="yearrAll"><img src="/offf/images/legend-year-15.svg"><img src="/offf/images/legend-year-16.svg"><img src="/offf/images/legend-year-both.svg"> <a>all years</a></li>
						</ul>
					</div>
				</div>
			</div>
	</div>

	<script>
		var dropdownl = d3.select("#pickl")
		var changesrc = function() {
			var source = dropdownl.node().options[dropdownl.node().selectedIndex].value;
			var legendcat = dropdownl.node().options[dropdownl.node().selectedIndex].dataset.legendcat;
			// $(".legendl").hide();
			// $(legendcat).show();
			d3.json(source, function(error, json) {
				graph = json; draw();
				// console.log("this is my option", dropdownl.node().options[dropdownl.node().selectedIndex]);
				// console.log("this is my first option", dropdownl.node().options[dropdownl.node().selectedIndex].value);
				// console.log("this is my second option", dropdownl.node().options[dropdownl.node().selectedIndex].dataset.legendcat);
			})
		}

		var dropdownr = d3.select("#pickr")
		var changecolor = function() {
			var legendcol = dropdownr.node().options[dropdownr.node().selectedIndex].dataset.legendcol;
			$(".legendr").hide();
			$(legendcol).show();

			$(".legendr").removeClass("nbr");
			$(legendcol).addClass("nbr");
		};

		function selectColor () {
			var pickrVal = $("#pickr").val();
			console.log("this is my pickrVal", pickrVal);

			if (pickrVal == "allIndustries") {
				includeGroupindustries = [0,1,2,3,4];
				draw();
			}
			else if (pickrVal == "allLocations") {
				includeGroupcontinents = [1,2,3,4,5];
				draw();
			}
			else if (pickrVal == "allStatus") {
				includeGroupstatus = [0,1,2,3,4];
				draw();
			}
			else if (pickrVal == "allYears") {
				includeGroupyears = [3,4,5];
				draw();
			}
		};
		// Add a class to the selected link
		$('.choicer li').click(function() {
						$('.choicer li').removeClass('selected');
						$(this).addClass('selected');
		});
		// Jquery function. When the dropdown pickr (right) is changed, the function changecolor starts
		$(function() {
			$('#pickr').change(function() {
				// dropdownr.on("changecolor", changecolor)
				changecolor();
				selectColor();
				});
		});
		// Jquery function. When the dropdown pickl (left) is changed, the function changesrc starts
		$(function() {
			$('#pickl').change(function() {
				// dropdownl.on("changesrc", changesrc)
				changesrc();
				});
		});
		// wire up the filters the hard way
		d3.select("#industryrDigital").on("click", function() {
			includeGroupindustries = [0];
			draw();
		});
		d3.select("#industryrMotion").on("click", function() {
			includeGroupindustries = [1];
			draw();
		});
		d3.select("#industryrPrint").on("click", function() {
			includeGroupindustries = [2];
			draw();
		});
		d3.select("#industryrProduct").on("click", function() {
			includeGroupindustries = [3];
			draw();
		});
		d3.select("#industryrSound").on("click", function() {
			includeGroupindustries = [4];
			draw();
		});
		d3.select("#industryrAll").on("click", function() {
			includeGroupindustries = [0,1,2,3,4];
			draw();
		});
		d3.select("#industryrMulti").on("click", function() {
			includeGroupindustries = [];
			draw();
		});
		d3.select("#yearr15").on("click", function(d,i) {
			includeGroupyears = [3];
			draw();
		});
		d3.select("#yearr16").on("click", function() {
			includeGroupyears = [4];
			draw();
		});
		d3.select("#yearr1516").on("click", function() {
			includeGroupyears = [5];
			draw();
		});
		d3.select("#yearrAll").on("click", function() {
			includeGroupyears = [3,4,5];
			draw();
		});
		d3.select("#locationrAsia").on("click", function() {
			includeGroupcontinents = [1];
			draw();
		});
		d3.select("#locationrAustralia").on("click", function() {
			includeGroupcontinents = [2];
			draw();
		});
		d3.select("#locationrEurope").on("click", function() {
			includeGroupcontinents = [3];
			draw();
		});
		d3.select("#locationrNamerica").on("click", function() {
			includeGroupcontinents = [4];
			draw();
		});
		d3.select("#locationrSAmerica").on("click", function() {
			includeGroupcontinents = [5];
			draw();
		});
		d3.select("#locationrAll").on("click", function() {
			includeGroupcontinents = [1,2,3,4,5];
			draw();
		});
		d3.select("#locationrMulti").on("click", function() {
			includeGroupcontinents = [];
			draw();
		});
		d3.select("#statusrIndependant").on("click", function() {
			includeGroupstatus = [0];
			draw();
		});
		d3.select("#statusrRepresented").on("click", function() {
			includeGroupstatus = [1];
			draw();
		});
		d3.select("#statusrAgency").on("click", function() {
			includeGroupstatus = [2];
			draw();
		});
		d3.select("#statusrEponym").on("click", function() {
			includeGroupstatus = [3];
			draw();
		});
		d3.select("#statusrCollective").on("click", function() {
			includeGroupstatus = [4];
			draw();
		});
		d3.select("#statusrAll").on("click", function() {
			includeGroupstatus = [0,1,2,3,4];
			draw();
		});
	</script>

	<div class="bleed intro">
		<div class="flex container">
			<div class="col-10 left-1 right-1 center introduction">
				<img src="/offf/images/offf-logo-darkest-saphire.svg" alt="offf-logo" style="width:150px" src="http://www.offf.ws/" target="_blank">
				<h2>OFFF is a three-day festival annually hosting innovative, creative and international speakers in Barcelona.</h2>
			</div>
		</div>
	</div>
	
</div>
